{"version":3,"file":"flash-messages.js","sources":["../../src/services/flash-messages.js"],"sourcesContent":["import Service from '@ember/service';\nimport { typeOf, isNone } from '@ember/utils';\nimport { warn, assert } from '@ember/debug';\nimport { classify } from '@ember/string';\nimport FlashMessage from '../flash/object';\nimport objectWithout from '../utils/object-without';\nimport { getOwner } from '@ember/application';\nimport flashMessageOptions from '../utils/flash-message-options';\nimport { associateDestroyableChild } from '@ember/destroyable';\nimport { tracked } from '@glimmer/tracking';\nimport { registerDestructor } from '@ember/destroyable';\n\nexport default class FlashMessagesService extends Service {\n  @tracked queue = [];\n\n  get arrangedQueue() {\n    return this.queue.slice().sort(function (a, b) {\n      if (a.priority < b.priority) {\n        return 1;\n      } else if (a.priority > b.priority) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  get isEmpty() {\n    return this.queue.length === 0;\n  }\n\n  get _guids() {\n    return this.queue.map((flash) => flash._guid);\n  }\n\n  constructor() {\n    super(...arguments);\n    this._setDefaults();\n\n    registerDestructor(this, this.clearMessages.bind(this));\n  }\n\n  add(options = {}) {\n    this._enqueue(this._newFlashMessage(options));\n\n    return this;\n  }\n\n  clearMessages() {\n    if (isNone(this.queue)) {\n      return;\n    }\n\n    this.queue.forEach((flash) => flash.destroyMessage());\n    this.queue = [];\n\n    return this;\n  }\n\n  registerTypes(types = []) {\n    types.forEach((type) => this._registerType(type));\n\n    return this;\n  }\n\n  peekFirst() {\n    return this.queue[0];\n  }\n\n  peekLast() {\n    return this.queue[this.queue.length - 1];\n  }\n\n  getFlashObject() {\n    const errorText = 'A flash message must be added before it can be returned';\n    assert(errorText, this.queue.length);\n\n    return this.peekLast();\n  }\n\n  _newFlashMessage(options = {}) {\n    assert(\n      'The flash message cannot be empty when preventDuplicates is enabled.',\n      this.defaultPreventDuplicates ? options.message : true,\n    );\n    assert(\n      'The flash message cannot be empty when preventDuplicates is enabled.',\n      options.preventDuplicates ? options.message : true,\n    );\n\n    const flashService = this;\n    const defaults = objectWithout(this.flashMessageDefaults, [\n      'types',\n      'preventDuplicates',\n    ]);\n\n    const flashMessageOptions = Object.assign({}, defaults, { flashService });\n\n    for (let key in options) {\n      const value = options[key];\n      const option = this._getOptionOrDefault(key, value);\n\n      flashMessageOptions[key] = option;\n    }\n\n    const message = new FlashMessage(flashMessageOptions);\n    associateDestroyableChild(this, message);\n    return message;\n  }\n\n  _getOptionOrDefault(key, value) {\n    const defaults = this.flashMessageDefaults;\n    const defaultOption = defaults[key];\n\n    if (typeOf(value) === 'undefined') {\n      return defaultOption;\n    }\n\n    return value;\n  }\n\n  get flashMessageDefaults() {\n    const config = getOwner(this).resolveRegistration('config:environment');\n    const overrides = config.flashMessageDefaults ?? {};\n    return flashMessageOptions(overrides);\n  }\n\n  _setDefaults() {\n    const defaults = this.flashMessageDefaults;\n\n    for (let key in defaults) {\n      const classifiedKey = classify(key);\n      const defaultKey = `default${classifiedKey}`;\n\n      this[defaultKey] = defaults[key];\n    }\n\n    this.registerTypes(this.defaultTypes ?? []);\n  }\n\n  _registerType(type) {\n    assert('The flash type cannot be undefined', type);\n\n    this[type] = (message, options = {}) => {\n      const flashMessageOptions = Object.assign({}, options);\n      Object.assign(flashMessageOptions, { message, type });\n\n      return this.add(flashMessageOptions);\n    };\n  }\n\n  _hasDuplicate(guid) {\n    return this._guids.includes(guid);\n  }\n\n  _enqueue(flashInstance) {\n    const instancePreventDuplicates = flashInstance.preventDuplicates;\n    const preventDuplicates =\n      typeof instancePreventDuplicates === 'boolean'\n        ? // always prefer instance option over global option\n          instancePreventDuplicates\n        : this.defaultPreventDuplicates;\n\n    if (preventDuplicates) {\n      const guid = flashInstance._guid;\n\n      if (this._hasDuplicate(guid)) {\n        warn(\n          'Attempting to add a duplicate message to the Flash Messages Service',\n          false,\n          {\n            id: 'ember-cli-flash.duplicate-message',\n          },\n        );\n        return;\n      }\n    }\n\n    this.queue = [...this.queue, flashInstance];\n    return this.queue;\n  }\n}\n"],"names":["FlashMessagesService","_class","Service","arrangedQueue","queue","slice","sort","a","b","priority","isEmpty","length","_guids","map","flash","_guid","constructor","arguments","_initializerDefineProperty","_descriptor","_setDefaults","registerDestructor","clearMessages","bind","add","options","_enqueue","_newFlashMessage","isNone","forEach","destroyMessage","registerTypes","types","type","_registerType","peekFirst","peekLast","getFlashObject","errorText","assert","defaultPreventDuplicates","message","preventDuplicates","flashService","defaults","objectWithout","flashMessageDefaults","flashMessageOptions","Object","assign","key","value","option","_getOptionOrDefault","FlashMessage","associateDestroyableChild","defaultOption","typeOf","config","getOwner","resolveRegistration","overrides","classifiedKey","classify","defaultKey","defaultTypes","_hasDuplicate","guid","includes","flashInstance","instancePreventDuplicates","warn","id","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer"],"mappings":"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"}